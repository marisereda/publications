{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Input = function Input(_ref) {\n  var textContentType = _ref.textContentType,\n    placeholder = _ref.placeholder,\n    value = _ref.value,\n    onChangeText = _ref.onChangeText,\n    showKeyboard = _ref.showKeyboard,\n    _ref$secureTextEntry = _ref.secureTextEntry,\n    secureTextEntry = _ref$secureTextEntry === void 0 ? false : _ref$secureTextEntry;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocusedInput = _useState2[0],\n    setIsFocusedInput = _useState2[1];\n  var handleFocusedInput = function handleFocusedInput() {\n    showKeyboard(true);\n    setIsFocusedInput(true);\n  };\n  return _jsx(TextInput, {\n    textContentType: textContentType,\n    autoComplete: \"off\",\n    placeholder: placeholder,\n    style: _objectSpread(_objectSpread({}, styles.input), {}, {\n      borderColor: isFocusedInput ? \"#FF6C00\" : \"#E8E8E8\"\n    }),\n    value: value,\n    onFocus: handleFocusedInput,\n    onBlur: function onBlur() {\n      return setIsFocusedInput(false);\n    },\n    onChangeText: onChangeText,\n    secureTextEntry: secureTextEntry\n  });\n};\nvar styles = StyleSheet.create({\n  input: {\n    padding: 16,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    borderColor: \"#E8E8E8\"\n  }\n});","map":{"version":3,"names":["useState","StyleSheet","TextInput","jsx","_jsx","Input","_ref","textContentType","placeholder","value","onChangeText","showKeyboard","_ref$secureTextEntry","secureTextEntry","_useState","_useState2","_slicedToArray","isFocusedInput","setIsFocusedInput","handleFocusedInput","autoComplete","style","_objectSpread","styles","input","borderColor","onFocus","onBlur","create","padding","fontFamily","fontSize","borderWidth","borderRadius","backgroundColor"],"sources":["D:/Mari/Desktop/react-native/publications/components/Input.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { StyleSheet, TextInput } from \"react-native\";\n\nexport const Input = ({ textContentType, placeholder, value, onChangeText, showKeyboard, secureTextEntry = false }) => {\n  const [isFocusedInput, setIsFocusedInput] = useState(false);\n\n  const handleFocusedInput = () => {\n    showKeyboard(true);\n    setIsFocusedInput(true);\n  };\n\n  return (\n    <TextInput\n      textContentType={textContentType}\n      autoComplete=\"off\"\n      placeholder={placeholder}\n      style={{ ...styles.input, borderColor: isFocusedInput ? \"#FF6C00\" : \"#E8E8E8\" }}\n      value={value}\n      onFocus={handleFocusedInput}\n      onBlur={() => setIsFocusedInput(false)}\n      onChangeText={onChangeText}\n      secureTextEntry={secureTextEntry}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    padding: 16,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    borderColor: \"#E8E8E8\",\n  },\n});\n"],"mappings":";;;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGjC,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAAqG;EAAA,IAA/FC,eAAe,GAAAD,IAAA,CAAfC,eAAe;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IAAEC,YAAY,GAAAL,IAAA,CAAZK,YAAY;IAAAC,oBAAA,GAAAN,IAAA,CAAEO,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,KAAK,GAAAA,oBAAA;EAC9G,IAAAE,SAAA,GAA4Cd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAExC,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/BR,YAAY,CAAC,IAAI,CAAC;IAClBO,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,OACEd,IAAA,CAACF,SAAS;IACRK,eAAe,EAAEA,eAAgB;IACjCa,YAAY,EAAC,KAAK;IAClBZ,WAAW,EAAEA,WAAY;IACzBa,KAAK,EAAAC,aAAA,CAAAA,aAAA,KAAOC,MAAM,CAACC,KAAK;MAAEC,WAAW,EAAER,cAAc,GAAG,SAAS,GAAG;IAAS,EAAG;IAChFR,KAAK,EAAEA,KAAM;IACbiB,OAAO,EAAEP,kBAAmB;IAC5BQ,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMT,iBAAiB,CAAC,KAAK,CAAC;IAAA,CAAC;IACvCR,YAAY,EAAEA,YAAa;IAC3BG,eAAe,EAAEA;EAAgB,EACjC;AAEN,CAAC;AAED,IAAMU,MAAM,GAAGtB,UAAU,CAAC2B,MAAM,CAAC;EAC/BJ,KAAK,EAAE;IACLK,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,gBAAgB;IAC5BC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE,SAAS;IAC1BT,WAAW,EAAE;EACf;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}