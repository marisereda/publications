{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { RegistrationScreen } from \"./screens/RegistrationScreen\";\nimport { LoginScreen } from \"./screens/LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n      \"Roboto-Regular\": require(\"./assets/fonts/Roboto/Roboto-Regular.ttf\"),\n      \"Roboto-Medium\": require(\"./assets/fonts/Roboto/Roboto-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(LoginScreen, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"green\",\n    justifyContent: \"center\"\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  }\n});","map":{"version":3,"names":["useCallback","useState","useEffect","StyleSheet","View","useFonts","SplashScreen","RegistrationScreen","LoginScreen","jsx","_jsx","App","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","style","styles","container","children","create","flex","backgroundColor","justifyContent","backgroundImage","resizeMode"],"sources":["D:/Mari/Desktop/react-native/publications/App.js"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { RegistrationScreen } from \"./screens/RegistrationScreen\";\nimport { LoginScreen } from \"./screens/LoginScreen\";\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    \"Roboto-Regular\": require(\"./assets/fonts/Roboto/Roboto-Regular.ttf\"),\n    \"Roboto-Medium\": require(\"./assets/fonts/Roboto/Roboto-Medium.ttf\"),\n  });\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* <RegistrationScreen /> */}\n      <LoginScreen />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"green\",\n\n    justifyContent: \"center\",\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n  },\n});\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAEzD,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,SAASC,kBAAkB;AAC3B,SAASC,WAAW;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAEpD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBP,QAAQ,CAAC;MAC7B,gBAAgB,EAAEQ,OAAO,4CAA4C;MACrE,eAAe,EAAEA,OAAO;IAC1B,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAHKI,WAAW,GAAAF,UAAA;EAIlB,IAAMG,gBAAgB,GAAGjB,WAAW,CAAAkB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,WAAW,EAAE;MACf,MAAMV,YAAY,CAACa,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEN,IAAA,CAACN,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAE5Bb,IAAA,CAACF,WAAW;EAAG,EACV;AAEX;AAEA,IAAMa,MAAM,GAAGlB,UAAU,CAACqB,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IAExBC,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE;IACfH,IAAI,EAAE,CAAC;IACPI,UAAU,EAAE,OAAO;IACnBF,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}