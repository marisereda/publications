{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, useEffect, useCallback } from \"react\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Input } from \"../components/Input\";\nimport { SecuredInput } from \"../components/SecuredInput\";\nimport { Avatar } from \"../components/Avatar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RegistrationScreen = function RegistrationScreen() {\n  var _useState = useState(Dimensions.get(\"window\").width),\n    _useState2 = _slicedToArray(_useState, 2),\n    screenWidth = _useState2[0],\n    setScreenWidth = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    passwordSecure = _useState4[0],\n    setPasswordSecure = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isShowKeyboard = _useState6[0],\n    setIsShowKeyboard = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoadedAvatar = _useState8[0],\n    setIsLoadedAvatar = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loadedAvatar = _useState10[0],\n    setLoadedAvatar = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    name = _useState12[0],\n    setName = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    email = _useState14[0],\n    setEmail = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    password = _useState16[0],\n    setPassword = _useState16[1];\n  var onChange = useCallback(function () {\n    var width = Dimensions.get(\"window\").width;\n    setScreenWidth(width);\n  });\n  useEffect(function () {\n    Dimensions.addEventListener(\"change\", onChange);\n    return function () {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  }, []);\n  var keyboardHide = function keyboardHide() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n  };\n  var handleAddingAvatar = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!isLoadedAvatar) {\n        var res = yield DocumentPicker.getDocumentAsync({\n          type: \"image/*\",\n          copyToCacheDirectory: true\n        });\n        if (res.type !== \"success\") {\n          console.log(\"File picking failed\");\n          return;\n        }\n        setLoadedAvatar(res);\n      } else if (isLoadedAvatar) {\n        setLoadedAvatar(null);\n      }\n      setIsLoadedAvatar(!isLoadedAvatar);\n    });\n    return function handleAddingAvatar() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleSubmit = function handleSubmit() {\n    keyboardHide();\n    console.log(\"name:\" + name);\n    console.log(\"email:\" + email);\n    console.log(\"password:\" + password);\n    console.log(\"avatar:\" + loadedAvatar.uri);\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setLoadedAvatar(null);\n    setPasswordSecure(true);\n    setIsLoadedAvatar(false);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: keyboardHide,\n    children: _jsx(ImageBackground, {\n      source: require(\"../assets/images/photo-bg.jpg\"),\n      style: styles.backgroundImage,\n      children: _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"\",\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: keyboardHide,\n          children: _jsxs(View, {\n            style: _objectSpread(_objectSpread({}, styles.form), {}, {\n              paddingBottom: isShowKeyboard ? 45 : 32,\n              width: screenWidth\n            }),\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: \"Registration\"\n            }), _jsx(Avatar, {\n              isLoadedAvatar: isLoadedAvatar,\n              loadedAvatar: loadedAvatar,\n              handleAddingAvatar: handleAddingAvatar\n            }), _jsxs(View, {\n              style: styles.fieldsWrap,\n              children: [_jsx(Input, {\n                textContentType: \"username\",\n                placeholder: \"Name\",\n                value: name,\n                onChangeText: setName,\n                showKeyboard: setIsShowKeyboard\n              }), _jsx(Input, {\n                textContentType: \"emailAddress\",\n                placeholder: \"Email\",\n                value: email,\n                onChangeText: setEmail,\n                showKeyboard: setIsShowKeyboard\n              }), _jsx(SecuredInput, {\n                textContentType: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChangeText: setPassword,\n                showKeyboard: setIsShowKeyboard,\n                passwordSecure: passwordSecure,\n                onPress: setPasswordSecure\n              })]\n            }), !isShowKeyboard && _jsxs(View, {\n              children: [_jsx(TouchableOpacity, {\n                style: styles.buttonSubmit,\n                onPress: handleSubmit,\n                children: _jsx(Text, {\n                  style: styles.textButton,\n                  children: \"Sign up\"\n                })\n              }), _jsxs(Text, {\n                style: styles.text,\n                children: [\"Have an account already? \", _jsx(Text, {\n                  style: styles.link,\n                  children: \"Sign in\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  form: {\n    backgroundColor: \"white\",\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingTop: 90,\n    paddingBottom: 45\n  },\n  title: {\n    marginBottom: 32,\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 30,\n    color: \"#212121\",\n    textAlign: \"center\"\n  },\n  fieldsWrap: {\n    gap: 16\n  },\n  buttonSubmit: {\n    marginTop: 40,\n    marginBottom: 16,\n    alignItems: \"center\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 50\n  },\n  textButton: {\n    paddingTop: 16,\n    paddingBottom: 16,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    color: \"#fff\"\n  },\n  text: {\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    color: \"#1B4371\",\n    textAlign: \"center\"\n  },\n  link: {}\n});","map":{"version":3,"names":["useState","useEffect","useCallback","DocumentPicker","StyleSheet","View","TouchableOpacity","Text","KeyboardAvoidingView","Platform","Keyboard","TouchableWithoutFeedback","ImageBackground","Dimensions","Input","SecuredInput","Avatar","jsx","_jsx","jsxs","_jsxs","RegistrationScreen","_useState","get","width","_useState2","_slicedToArray","screenWidth","setScreenWidth","_useState3","_useState4","passwordSecure","setPasswordSecure","_useState5","_useState6","isShowKeyboard","setIsShowKeyboard","_useState7","_useState8","isLoadedAvatar","setIsLoadedAvatar","_useState9","_useState10","loadedAvatar","setLoadedAvatar","_useState11","_useState12","name","setName","_useState13","_useState14","email","setEmail","_useState15","_useState16","password","setPassword","onChange","addEventListener","removeEventListener","keyboardHide","dismiss","handleAddingAvatar","_ref","_asyncToGenerator","res","getDocumentAsync","type","copyToCacheDirectory","console","log","apply","arguments","handleSubmit","uri","onPress","children","source","require","style","styles","backgroundImage","behavior","OS","_objectSpread","form","paddingBottom","title","fieldsWrap","textContentType","placeholder","value","onChangeText","showKeyboard","buttonSubmit","textButton","text","link","create","flex","resizeMode","justifyContent","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingLeft","paddingRight","paddingTop","marginBottom","fontFamily","fontSize","color","textAlign","gap","marginTop","alignItems","borderRadius"],"sources":["D:/Mari/Desktop/react-native/publications/screens/RegistrationScreen.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  KeyboardAvoidingView,\n  Platform,\n  Keyboard,\n  TouchableWithoutFeedback,\n  ImageBackground,\n  Dimensions,\n} from \"react-native\";\nimport { Input } from \"../components/Input\";\nimport { SecuredInput } from \"../components/SecuredInput\";\nimport { Avatar } from \"../components/Avatar\";\n\nexport const RegistrationScreen = () => {\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get(\"window\").width);\n  const [passwordSecure, setPasswordSecure] = useState(true);\n  const [isShowKeyboard, setIsShowKeyboard] = useState(false);\n  const [isLoadedAvatar, setIsLoadedAvatar] = useState(false);\n  const [loadedAvatar, setLoadedAvatar] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onChange = useCallback(() => {\n    const width = Dimensions.get(\"window\").width;\n    setScreenWidth(width);\n  });\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  }, []);\n\n  const keyboardHide = () => {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n  };\n\n  // -------------- Adding or removing Avatar ---------------\n  const handleAddingAvatar = async () => {\n    if (!isLoadedAvatar) {\n      const res = await DocumentPicker.getDocumentAsync({\n        type: \"image/*\",\n        copyToCacheDirectory: true,\n      });\n\n      if (res.type !== \"success\") {\n        console.log(\"File picking failed\");\n        return;\n      }\n      setLoadedAvatar(res);\n    } else if (isLoadedAvatar) {\n      setLoadedAvatar(null);\n    }\n    setIsLoadedAvatar(!isLoadedAvatar);\n  };\n\n  // -------------- Submit registration --------------\n  const handleSubmit = () => {\n    keyboardHide();\n    console.log(`name:${name}`);\n    console.log(`email:${email}`);\n    console.log(`password:${password}`);\n    console.log(`avatar:${loadedAvatar.uri}`);\n\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setLoadedAvatar(null);\n    setPasswordSecure(true);\n    setIsLoadedAvatar(false);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={keyboardHide}>\n      <ImageBackground source={require(\"../assets/images/photo-bg.jpg\")} style={styles.backgroundImage}>\n        <KeyboardAvoidingView behavior={Platform.OS == \"ios\" ? \"padding\" : \"\"}>\n          <TouchableWithoutFeedback onPress={keyboardHide}>\n            <View style={{ ...styles.form, paddingBottom: isShowKeyboard ? 45 : 32, width: screenWidth }}>\n              <Text style={styles.title}>Registration</Text>\n              <Avatar\n                isLoadedAvatar={isLoadedAvatar}\n                loadedAvatar={loadedAvatar}\n                handleAddingAvatar={handleAddingAvatar}\n              />\n              <View style={styles.fieldsWrap}>\n                <Input\n                  textContentType=\"username\"\n                  placeholder=\"Name\"\n                  value={name}\n                  onChangeText={setName}\n                  showKeyboard={setIsShowKeyboard}\n                />\n\n                <Input\n                  textContentType=\"emailAddress\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChangeText={setEmail}\n                  showKeyboard={setIsShowKeyboard}\n                />\n\n                <SecuredInput\n                  textContentType=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChangeText={setPassword}\n                  showKeyboard={setIsShowKeyboard}\n                  passwordSecure={passwordSecure}\n                  onPress={setPasswordSecure}\n                />\n              </View>\n              {!isShowKeyboard && (\n                <View>\n                  <TouchableOpacity style={styles.buttonSubmit} onPress={handleSubmit}>\n                    <Text style={styles.textButton}>Sign up</Text>\n                  </TouchableOpacity>\n                  <Text style={styles.text}>\n                    Have an account already? <Text style={styles.link}>Sign in</Text>\n                  </Text>\n                </View>\n              )}\n            </View>\n          </TouchableWithoutFeedback>\n        </KeyboardAvoidingView>\n      </ImageBackground>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n  },\n  form: {\n    backgroundColor: \"white\",\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingTop: 90,\n    paddingBottom: 45,\n  },\n  title: {\n    marginBottom: 32,\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 30,\n    color: \"#212121\",\n    textAlign: \"center\",\n  },\n  fieldsWrap: {\n    gap: 16,\n  },\n  buttonSubmit: {\n    marginTop: 40,\n    marginBottom: 16,\n    alignItems: \"center\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 50,\n  },\n  textButton: {\n    paddingTop: 16,\n    paddingBottom: 16,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    color: \"#fff\",\n  },\n  text: {\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    color: \"#1B4371\",\n    textAlign: \"center\",\n  },\n  link: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}